<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.java.novelpost.dao.mapper.NovelPostMapper">
	<resultMap type="com.java.novelpost.dto.NovelPostDto"
		id="novelPostDto">
		<result column="N_NUM" property="N_NUM" />
		<result column="N_POST_EPISODE" property="N_POST_EPISODE" />
		<result column="N_POST_TITLE" property="N_POST_TITLE" />
		<result column="N_POST_CONTENT_NAME"
			property="N_POST_CONTENT_NAME" />
		<result column="N_POST_CONTENT_PATH"
			property="N_POST_CONTENT_PATH" />
		<result column="N_POST_CONTENT_SIZE"
			property="N_POST_CONTENT_SIZE" />
		<result column="N_POST_LIKE" property="N_POST_LIKE" />
		<result column="N_POST_DISLIKE" property="N_POST_DISLIKE" />
		<result column="N_POST_VIEWCOUNT" property="N_POST_VIEWCOUNT" />
		<result column="N_POST_TIME" property="N_POST_TIME" />
	</resultMap>

	<select id="novelPostCount" resultType="int">
		SELECT COUNT(*) FROM
		NOVEL_POST
	</select>

	<select id="novelPostList" parameterType="java.util.HashMap"
		resultMap="novelPostDto">
		<![CDATA[
			SELECT * FROM (SELECT
			ROWNUM AS rnum, a.* FROM
			(SELECT * FROM NOVEL_POST ORDER BY n_num DESC) a) b
			WHERE b.rnum >=#{startRow} AND
			b.rnum <=#{endRow}
		]]>
	</select>
	<insert id="novelPostInsert"
		parameterType="com.java.novelpost.dto.NovelPostDto">
		INSERT INTO
		NOVEL_POST(n_num,
				N_POST_EPISODE,
				N_POST_TITLE,
				N_POST_CONTENT_NAME,
				N_POST_CONTENT_PATH,
				N_POST_CONTENT_SIZE,
				N_POST_LIKE,
				N_POST_DISLIKE,
				N_POST_VIEWCOUNT,
				N_POST_TIME)
		VALUES(n_num, jdbcType=NUMERIC},
			#{N_POST_EPISODE, jdbcType=VARCHAR},	
			#{N_POST_TITLE, jdbcType=VARCHAR},
			#{N_POST_CONTENT_NAME, jdbcType=VARCHAR},
			#{N_POST_CONTENT_PATH, jdbcType=VARCHAR},
			#{N_POST_CONTENT_SIZE, jdbcType=NUMERIC},
			#{N_POST_LIKE, jdbcType=NUMERIC},
			#{N_POST_DISLIKE, jdbcType=NUMERIC},
			#{N_POST_VIEWCOUNT, jdbcType=NUMERIC},
			sysdate)
	</insert>


</mapper>   		
  	